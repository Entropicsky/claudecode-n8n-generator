{
  "name": "Helper App",
  "nodes": [
    {
      "parameters": {
        "name": "emailAgent",
        "description": "Call this tool for any email actions.",
        "workflowId": {
          "__rl": true,
          "value": "BQ9M9bKlTXL7gd0n",
          "mode": "list",
          "cachedResultName": "Email Workflow"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -280,
        700
      ],
      "id": "68c99710-8942-4a06-8ca3-348910c19b20",
      "name": "Email Agent"
    },
    {
      "parameters": {
        "name": "contactAgent",
        "description": "Call this tool for any contact related actions using Slack.",
        "workflowId": {
          "__rl": true,
          "value": "5bfFXA8s9oTNPkLH",
          "mode": "list",
          "cachedResultName": "Slack Workflow"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        1040,
        700
      ],
      "id": "3168ae05-06d5-427e-b750-aab271946403",
      "name": "Contact Agent"
    },
    {
      "parameters": {
        "name": "calendarAgent",
        "description": "Call this tool for any calendar action.",
        "workflowId": {
          "__rl": true,
          "value": "2sEHFuQkoIifzYos",
          "mode": "list",
          "cachedResultName": "Calendar Workflow"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        420,
        700
      ],
      "id": "918921f0-495d-498e-8791-947dc778b660",
      "name": "Calendar Agent"
    },
    {
      "parameters": {
        "content": "# Main Agent\n\n",
        "height": 420,
        "width": 1160,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        240
      ],
      "typeVersion": 1,
      "id": "da8156a0-2c0c-4589-b66b-8561c217c480",
      "name": "Sticky Note"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        500,
        100
      ],
      "id": "a84665e5-8611-4d9f-8086-947e67ba589d",
      "name": "Think"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $execution.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        400,
        100
      ],
      "id": "49023ec3-3381-4672-8588-035ba0e312df",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "content": "# Email Agent",
        "height": 700,
        "width": 620
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -580,
        680
      ],
      "id": "f6ee80ab-a82f-4f13-840f-7349dbf10944",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Calendar Agent",
        "height": 700,
        "width": 540,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        680
      ],
      "id": "57e4f827-26b7-4a32-8f55-9c03cd63bb44",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Main Orchestrator",
        "height": 200,
        "width": 400,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        220,
        20
      ],
      "id": "f6d4d2aa-1bf5-4d8e-83ce-3b0a9901f49f",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "# Slack Agent",
        "height": 700,
        "width": 540,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        620,
        680
      ],
      "id": "e2884d05-e329-41ce-b352-c9b322b4723a",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "CEO-workflow",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        60,
        320
      ],
      "id": "1eff9ea4-a576-4e44-a3a4-7181de0a4e0e",
      "name": "Webhook",
      "webhookId": "6c3c386f-a5a2-498f-a427-12a872133be0"
    },
    {
      "parameters": {
        "content": "# Helper 2.0\n\n## This *AI Agent* has a team of with 4 other *AI Agents*\n **- Email Agent**\n **- Calendar Agent**\n **- Slack Agent**",
        "height": 420,
        "width": 560,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -580,
        240
      ],
      "typeVersion": 1,
      "id": "391691af-e3d3-4dce-96d4-5e58c90437c5",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.text }}\n{{ $json.query }}",
        "options": {
          "systemMessage": "=# Overview\nYou are the ultimate personal assistant. Your job is to send the user's query to the correct tool. You should never be writing emails, or creating even summaries, you just need to call the correct tool.\n\n## Tools\n- Think: Use this to think deeply or if you get stuck\n- emailAgent: Use this tool to take action in email\n- calendarAgent: Use this tool to take action in calendar\n- contactAgent: Use this tool to get, update, or add contacts\n- contentCreator: Use this tool to create blog posts\n- Tavily: Use this tool to search the web\n\n## Rules\n- Some actions require you to look up contact information first. For the following actions, you must get email address and send that to the agent who needs it:\n  - sending emails\n  - drafting emails\n  - creating calendar event with attendee\n\n## Instructions\n1) Call the neccessary tools based on the user request\n2) Use the \"Think\" tool to verify you took the right steps. This tool should be called every time.\n\n\n## Examples\n1) \n- Input: send an email to nate herkelman asking him what time he wants to leave\n  - Action: Use contactAgent to get nate herkelman's email\n  - Action: Use emailAgent to send the email. You will pass the tool a query like \"send nate herkelman an email to ask what time he wants to leave. here is his email: [email address]\n- Output: The email has been sent to Nate Herkelman. Anything else I can help you with?\n\n\n## Final Reminders\nHere is the current date/time: {{ $now }}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        280,
        420
      ],
      "id": "35fe9cd7-23b3-47b7-8df8-697db1af5060",
      "name": "Head Assistant"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "claude-sonnet-4-20250514",
          "mode": "list",
          "cachedResultName": "Claude Sonnet 4"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        260,
        100
      ],
      "id": "294ff3b5-23e8-4954-82d0-c6e3d11906b2",
      "name": "Anthropic Chat Model1"
    },
    {
      "parameters": {
        "sendTo": "={{ $fromAI(\"emailAddress\") }}",
        "subject": "={{ $fromAI(\"subject\") }}",
        "message": "={{ $fromAI(\"emailBody\") }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -280,
        1080
      ],
      "id": "2f259862-a6a1-406c-b734-f665c2d37de6",
      "name": "Send Email",
      "webhookId": "86c8c4b1-13bb-4ebe-acb9-30e1d7082d55"
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": "={{ $fromAI(\"limit\",\"how many emails the user wants\") }}",
        "simple": false,
        "filters": {
          "sender": "={{ $fromAI(\"sender\",\"who the emails are from\") }}"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -180,
        1200
      ],
      "id": "9f9125e5-290d-4b5f-87ec-a55e59988e83",
      "name": "Get Emails",
      "webhookId": "af4b3298-9037-44b0-aa12-2acbfbb5e66f"
    },
    {
      "parameters": {
        "resource": "draft",
        "subject": "={{ $fromAI(\"subject\") }}",
        "emailType": "html",
        "message": "={{ $fromAI(\"emailBody\") }}",
        "options": {
          "threadId": "={{ $fromAI(\"threadID\") }}",
          "sendTo": "={{ $fromAI(\"emailAddress\") }}"
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -380,
        1200
      ],
      "id": "5a0d3829-689c-4872-bf70-d16209e6e9d3",
      "name": "Create Draft",
      "webhookId": "17016bce-d7d7-428a-a56c-f6ea122db8be"
    },
    {
      "parameters": {
        "operation": "reply",
        "messageId": "={{ $fromAI(\"ID\",\"the message ID\") }}",
        "message": "={{ $fromAI(\"emailBody\") }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -180,
        1080
      ],
      "id": "e3a0beed-9e82-43cf-a571-2d4d67e78b78",
      "name": "Email Reply",
      "webhookId": "114785e6-a859-432b-81b4-c490c1c35b1c"
    },
    {
      "parameters": {
        "resource": "label",
        "returnAll": true
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -80,
        1200
      ],
      "id": "569813d7-d34f-498b-a3e8-d010decf543d",
      "name": "Get Labels",
      "webhookId": "9e08b59e-792d-4566-83f1-9263c9ad86ae"
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $fromAI(\"ID\",\"the ID of the message\") }}",
        "labelIds": "={{ $fromAI(\"labelID\") }}"
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -80,
        1080
      ],
      "id": "475184d9-a6f3-442f-8d0a-4ae4df0d36bd",
      "name": "Label Emails",
      "webhookId": "0e951529-2e6d-40bf-ac40-fc0947e242e2"
    },
    {
      "parameters": {
        "operation": "markAsUnread",
        "messageId": "={{ $fromAI(\"messageID\") }}"
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -280,
        1200
      ],
      "id": "a4614718-4b90-41a6-8bc6-91537b0d6a85",
      "name": "Mark Unread",
      "webhookId": "a35af9d8-f67d-4ff9-803f-59ec6356e795"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "=# Overview\nYou are an email management assistant. All emails must be formatted professionally in HTML. Sign it off as Muhammad.\n\n**Email Management Tools**   \n   - Use \"Send Email\" to send emails.  \n   - Use \"Create Draft\" if the user asks for a draft.  \n   - Use \"Get Emails\" to retrieve emails when requested.\n   - Use \"Get Labels\" to retrieve labels.\n   - Use \"Mark Unread\" to mark an email as unread. You must use \"Get Emails\" first so you have the message ID of the email to flag.\n   - Use \"Label Email\" to flag an email. You must use \"Get Emails\" first so you have the message ID of the email to flag. Then you must use \"Get Labels\" so you have the label ID.\n   - Use \"Email Reply\" to reply to an email. You must use \"Get Emails\" first so you have the message ID of the email to reply to.\n- Here is the current date/time: {{ $now }}"
        }
      },
      "id": "08466245-307f-4fd2-b9df-4ba0548a5912",
      "name": "Email Agent1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -380,
        820
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        60,
        460
      ],
      "id": "72ae7900-a4ed-4547-b366-b6417b0e00ca",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -380,
        1080
      ],
      "id": "2cb6b65d-7398-4a3c-b91b-e595e6a8d177",
      "name": "4.1"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "email-agent",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -560,
        820
      ],
      "id": "72e43821-2efe-4b70-9d15-2ff2ddc836d2",
      "name": "Email Webhook",
      "webhookId": "87b1f3f0-f469-482e-b24c-6bf34a60f456"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "muhammad@notanumber.com",
          "mode": "list",
          "cachedResultName": "muhammad@notanumber.com"
        },
        "start": "={{ $fromAI(\"eventStart\") }}",
        "end": "={{ $fromAI(\"eventEnd\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI(\"eventAttendeeEmail\") }}"
          ],
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        500,
        1200
      ],
      "id": "443dcf0a-1e9e-488c-a4cb-4a0627bca7a0",
      "name": "Create Event with Attendee"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "muhammad@notanumber.com",
          "mode": "list",
          "cachedResultName": "muhammad@notanumber.com"
        },
        "start": "={{ $fromAI(\"eventStart\") }}",
        "end": "={{ $fromAI(\"eventEnd\") }}",
        "additionalFields": {
          "attendees": [],
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        340,
        1200
      ],
      "id": "523fb738-94e8-45d5-8629-e06c472a5f97",
      "name": "Create Event"
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "muhammad@notanumber.com",
          "mode": "list",
          "cachedResultName": "muhammad@notanumber.com"
        },
        "timeMin": "={{ $fromAI(\"dayBefore\",\"the day before the date the user requested\") }}",
        "timeMax": "={{ $fromAI(\"dayAfter\",\"the day after the date the user requested\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        180,
        1200
      ],
      "id": "ea028f97-86b1-4a82-b434-52f6d417436c",
      "name": "Get Events"
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "muhammad@notanumber.com",
          "mode": "list",
          "cachedResultName": "muhammad@notanumber.com"
        },
        "eventId": "={{ $fromAI(\"eventID\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        500,
        1060
      ],
      "id": "81d236ef-14b0-4354-9c82-87ca71b04228",
      "name": "Delete Event"
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "muhammad@notanumber.com",
          "mode": "list",
          "cachedResultName": "muhammad@notanumber.com"
        },
        "eventId": "={{ $fromAI(\"eventID\") }}",
        "updateFields": {
          "end": "={{ $fromAI(\"endTime\") }}",
          "start": "={{ $fromAI(\"startTime\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        340,
        1060
      ],
      "id": "35166d9d-9589-4d06-bf1a-b517dae76b60",
      "name": "Update Event"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}\n{{ $json.body.text }}",
        "options": {
          "systemMessage": "=# Overview\nYou are a calendar assistant. Your responsibilities include creating, getting, and deleting events in the user's calendar.\n\n**Calendar Management Tools**  \n   - Use \"Create Event with Attendee\" when an event includes a participant.  \n   - Use \"Create Event\" for solo events.   \n   - Use \"Get Events\" to fetch calendar schedules when requested.\n   - Use \"Delete Event\" to delete an event. You must use \"Get Events\" first to get the ID of the event to delete.\n   - Use \"Update Event\" to update an event. You must use \"Get Events\" first to get the ID of the event to update.\n\n## Final Notes\nHere is the current date/time: {{ $now }}\nMake your best assumptions about how long the event will take if no given time is specified."
        }
      },
      "id": "9c147526-1617-4d9e-a7df-513859b03e9f",
      "name": "Calendar Agent1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        240,
        860
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "calendar-agent",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        100,
        860
      ],
      "id": "07b3d1b0-0dfa-4e75-99f5-a3c356356b3a",
      "name": "Webhook1",
      "webhookId": "92a84ef9-460f-471a-9f2f-6775897fd8ec"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        180,
        1060
      ],
      "id": "3ab240ce-2955-4aec-9a7d-89208b3ec6b4",
      "name": "4. 1"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "user",
        "user": {
          "__rl": true,
          "mode": "username",
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('User', ``, 'string') }}"
        },
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message_Text', ``, 'string') }}",
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slackTool",
      "typeVersion": 2.3,
      "position": [
        900,
        1200
      ],
      "id": "e7905ddc-2ef6-4759-9823-1bf338767182",
      "name": "Message User",
      "webhookId": "81cf0e57-fe7c-4e82-b583-6773e838cd1a"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "user",
        "operation": "getAll",
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}"
      },
      "type": "n8n-nodes-base.slackTool",
      "typeVersion": 2.3,
      "position": [
        760,
        1060
      ],
      "id": "a0984903-ba96-4db6-aaf1-a153c239bccd",
      "name": "Get Users",
      "webhookId": "fd7653ea-21fd-42e3-9cd9-0e0d7f47befd"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "channel",
        "operation": "getAll",
        "returnAll": true,
        "filters": {}
      },
      "type": "n8n-nodes-base.slackTool",
      "typeVersion": 2.3,
      "position": [
        900,
        1060
      ],
      "id": "40f2a583-8eeb-4031-9ce0-b1222f1fc80f",
      "name": "Get Slack Channels",
      "webhookId": "35ec5b02-564f-4c5c-ae05-6785675f41e2"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "channel",
        "operation": "history",
        "channelId": {
          "__rl": true,
          "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Channel', ``, 'string') }}",
          "mode": "id"
        },
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "filters": {}
      },
      "type": "n8n-nodes-base.slackTool",
      "typeVersion": 2.3,
      "position": [
        1040,
        1200
      ],
      "id": "0d62dedf-1cef-48de-9e22-6e8868696883",
      "name": "Get Channel History",
      "webhookId": "e11535f7-91e4-44a6-8382-c3afa43b0780"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "channel",
        "operation": "open",
        "options": {}
      },
      "type": "n8n-nodes-base.slackTool",
      "typeVersion": 2.3,
      "position": [
        1060,
        1060
      ],
      "id": "19d7c0ce-b60f-4605-87ca-c9d5659846ed",
      "name": "Open Message",
      "webhookId": "622c4743-00da-4f7b-a020-2132fd671bbf"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "claude-sonnet-4-20250514",
          "mode": "list",
          "cachedResultName": "Claude Sonnet 4"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        760,
        1200
      ],
      "id": "27ba9d44-cead-4d09-9684-03e2eea822ca",
      "name": "Sonnet 4"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "research-agent",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        640,
        840
      ],
      "id": "77a0290b-e3da-4fea-950f-6354b9ebbfd4",
      "name": "Webhook3",
      "webhookId": "4cf1f4ff-91cc-49e5-9b62-99261a919efa"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "=#You are a Slack Agent\n\nYou have primary tools to read and write to Slack channels and users. Your goal is to be an assistant to the user and manage their Slack information for them.\n\n##Precursor:\n - GET the users or channels first\n - If the user wants to respond to a message, READ the messages first  \n##Important\n - Only message whoever is necessary.\n - - If the user or channel is explicitly mentioned, only write to them.\n\n**Contact Management**  \nThis consumes the Slack API"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        780,
        840
      ],
      "id": "436d4b0b-da45-4032-be88-747b5c11e72f",
      "name": "Slack Agents",
      "onError": "continueRegularOutput"
    }
  ],
  "pinData": {},
  "connections": {
    "Email Agent": {
      "ai_tool": [
        [
          {
            "node": "Head Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Contact Agent": {
      "ai_tool": [
        [
          {
            "node": "Head Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Agent": {
      "ai_tool": [
        [
          {
            "node": "Head Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Head Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Head Assistant",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Head Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Head Assistant",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Send Email": {
      "ai_tool": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Emails": {
      "ai_tool": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Draft": {
      "ai_tool": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Email Reply": {
      "ai_tool": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Labels": {
      "ai_tool": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Label Emails": {
      "ai_tool": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Mark Unread": {
      "ai_tool": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Head Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "4.1": {
      "ai_languageModel": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Create Event with Attendee": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Events": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "4. 1": {
      "ai_languageModel": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Message User": {
      "ai_tool": [
        [
          {
            "node": "Slack Agents",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Users": {
      "ai_tool": [
        [
          {
            "node": "Slack Agents",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Slack Channels": {
      "ai_tool": [
        [
          {
            "node": "Slack Agents",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Channel History": {
      "ai_tool": [
        [
          {
            "node": "Slack Agents",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Open Message": {
      "ai_tool": [
        [
          {
            "node": "Slack Agents",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Sonnet 4": {
      "ai_languageModel": [
        [
          {
            "node": "Slack Agents",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "37e07ef2-200d-4e43-aee1-5ca28d3316e4",
  "meta": {
    "instanceId": "698c45446c2e6eb305ba7e97999f1e71397dbe0b49fb0dbeff847ebf3daff951"
  },
  "id": "XLwT9c57h6LQ92pb",
  "tags": []
}